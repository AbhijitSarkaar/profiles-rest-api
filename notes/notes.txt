sections 

    - setup the database 
        - docstring to be added to class and functions for readability of code 
        - every models to define a string representation function '__str__'
        - model manager 
            - django models uses model manager to interact with database 
            - default name of model manager is 'objects'
            - methods defined in model manager should be relevant to the database table 
        - error handling
            - 'raise' keyword is used for handling exceptions
        - it is a good practice to specify the database being used to store the data 
            - user.save(using=self._db)
        - user column 'is_superuser' is created by 'PermissionMixin' model
        - migration for a specific app
            - python manage.py makemigrations 'app_name' 

    - APIview 
        - it is a class which defines methods as http methods 
        - methods can be used to define logic for api endpoints
        - serializers 
            - it helps in defining which fields are expected in request data
            - validation of input data 
            - create, update of model instances 
            - serializers.ModelSerializer 
                - create serializers specific to defined models 
                - create objects in database for a model 
                - overwriting default create function requires defining a 'create' function as method of ModelSerializer class 
                - when creating a new object using UserProfileSerializer
                    - it validates the fields provided to the serializer
                    - it calls the defined 'create' function with validated_data 
    
    - Viewset 
        - it is a class which defines methods to respond to different http methods
        - methods are used to define logic for specific http methods
        - django rest framework router is used to route the urls to viewset methods 
        - model viewset 
            - define a serializer class 
            - provide a 'queryset' to a model viewset to specify which objects are to be managed through this viewset
                - it is used to define the scope of data that this viewset is to be used to manage 
            - django rest framework (DRF) knows standard functions relevant to a model viewset 
                - DRF defines create, update, retrieve, destroy, list methods by default. only thing needed from model viewset's 
                perspective is to define the structure of data through model serializer, and scope of data through 'queryset'
        - whenever a request is made to viewset, it gets passed to a serializer class. data is then validated and saved 
        - 'request' object is an object passed to all viewsets every time a http request is made 
            

    - Authentication and authorization
        - rest framework provides a permissions module  
        - Authentication and authorization feature is defined in viewset 
        - permission class is defined and it added to viewset 
        - authenticated user profile is added to the http requests by django using the key 'user' 
            - request.user is the authenticated user 
            - login status can be understood from the 'user' data in request 
        - http request with header fpr user authetication 
            - 'Authorization': Token token_value 
















concepts not understood fully 
    - django commane line tool
    - model manager 